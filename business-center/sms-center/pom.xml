<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.open.capacity</groupId>
		<artifactId>business-center</artifactId>
		<version>${revision}</version>
	</parent>
	<artifactId>sms-center</artifactId>
	<description>短信中心</description>
	<dependencies>
		<!-- 启动图标 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>banner-spring-boot-starter</artifactId>
		</dependency>
		<!-- 配置服务 -->
        <dependency>
            <groupId>com.open.capacity</groupId>
            <artifactId>config-spring-boot-starter</artifactId>
        </dependency>
		<!-- 关系型数据库配置 -->
		<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>db-spring-boot-starter</artifactId>
		</dependency>
		<!-- 非关系型数据库配置 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>redis-spring-boot-starter</artifactId>
		</dependency>
		<!-- 日志中心 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>log-spring-boot-starter</artifactId>
		</dependency>
		<!-- 公共实体配置 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>common-spring-boot-starter</artifactId>
		</dependency>
		<!-- 资源服务器配置 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>uaa-client-spring-boot-starter</artifactId>
		</dependency>
		<!-- API文档中心配置 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>swagger-spring-boot-starter</artifactId>
		</dependency>
        <!-- 负责均衡 -->
        <dependency>
            <groupId>com.open.capacity</groupId>
            <artifactId>loadbalancer-spring-boot-starter</artifactId>
        </dependency>
		<!-- 熔断限流组件 -->
		<dependency>
			<groupId>com.open.capacity</groupId>
			<artifactId>sentinel-spring-boot-starter</artifactId>
		</dependency>
		<!-- WEB守护进程启动springboot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- 阿里短信接口 -->
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-core</artifactId>
			<version>3.7.1</version>
		</dependency>
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-dysmsapi</artifactId>
			<version>1.1.0</version>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-zipkin</artifactId> 
			</dependency> -->

		<!-- 选用nacos时打开 -->
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
		</dependency>

		 
	</dependencies>

	<!-- 形成带第三方jar包的可执行jar包，jar包目录结构如下 application.properties lib META-INF mybatis 
		org -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- 首先加入pom ${docker.image.prefix} ： 这个是你的dockerhub注册上面的名字 gitgeek 这个是我注册的 
				${project.artifactId} ： 项目的名称 dockerDirectory ： dockerfile的文件路径 -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<dockerHost>${docker.host}</dockerHost>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>
</project>