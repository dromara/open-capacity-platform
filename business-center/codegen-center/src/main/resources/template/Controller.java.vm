package ${package}.${pkgName}.controller;

import java.util.Map;

import com.open.capacity.commons.ResponseEntity;
import io.swagger.annotations.Api;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.security.access.prepost.PreAuthorize;
import ${package}.${pkgName}.entity.${className};
import ${package}.${pkgName}.service.${className}Service;

import com.open.capacity.commons.PageResult;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${pathName}")
@Api(tags = "${comments}")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    @PreAuthorize("hasAnyAuthority('${tableName}:${pathName}:list')")
    public PageResult list(@RequestParam Map<String, Object> params){
        PageResult pageResult = ${classname}Service.findAll(params);
        return pageResult;
    }


    /**
     * 保存
     */
    @RequestMapping("/save")
    @PreAuthorize("hasAnyAuthority('generator:sysroleuser:save')")
    public ResponseEntity save(@RequestBody ${className} ${classname}){
			${classname}Service.save(${classname});

        return ResponseEntity.succeed("保存成功");
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    @PreAuthorize("hasAnyAuthority('generator:sysroleuser:update')")
    public ResponseEntity update(@RequestBody ${className} ${classname}){
			${classname}Service.update(${classname});

        return ResponseEntity.succeed("修改成功");
    }

    /**
     * 删除
     */
    @RequestMapping("/delete/{id}")
    @PreAuthorize("hasAnyAuthority('generator:sysroleuser:delete')")
    public ResponseEntity delete(@PathVariable Long  ${pk.attrname}){
			${classname}Service.delete(${pk.attrname});
        return ResponseEntity.succeed("删除成功");
    }

}
