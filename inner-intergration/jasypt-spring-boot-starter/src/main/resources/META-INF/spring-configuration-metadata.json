{
    "groups": [
        {
            "name": "jasypt.encryptor",
            "type": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties"
        },
        {
            "name": "jasypt.encryptor.property",
            "type": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties$PropertyConfigurationProperties",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties$PropertyConfigurationProperties"

        }
    ],
    "properties": [
        {
            "name": "jasypt.encryptor.algorithm",
            "type": "java.lang.String",
            "description": "Encryption/Decryption Algorithm to be used by Jasypt.\n Default Value is {@code \"PBEWithMD5AndDES\"}.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getAlgorithm()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": "PBEWithMD5AndDES"
        },
        {
            "name": "jasypt.encryptor.keyObtentionIterations",
            "type": "java.lang.String",
            "description": "Number of hashing iterations to obtain the signing key.\n Default Value is {@code \"1000\"}.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getKeyObtentionIterations()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": "1000"
        },
        {
            "name": "jasypt.encryptor.password",
            "type": "java.lang.String",
            "description": "Master Password used for Encryption/Decryption of properties.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getPassword()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties"
        },
        {
            "name": "jasypt.encryptor.poolSize",
            "type": "java.lang.String",
            "description": "The size of the pool of encryptors to be created.\n Default Value is {@code \"1\"}.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getPoolSize()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": "1"
        },
        {
            "name": "jasypt.encryptor.providerName",
            "type": "java.lang.String",
            "description": "The name of the {@link java.security.Provider} implementation\n to be used by the encryptor for obtaining the encryption algorithm.\n Default Value is {@code null}.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getProviderName()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue":null        },
        {
            "name": "jasypt.encryptor.proxyPropertySources",
            "type": "java.lang.Boolean",
            "description": "Whether to use JDK/Cglib (depending on classpath availability) proxy with an AOP advice as a decorator for existing {@link org.springframework.core.env.PropertySource}\n or just simply use targeted wrapper Classes.\n Default Value is {@code false}.",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": false
        },
        {
            "name": "jasypt.encryptor.saltGeneratorClassname",
            "type": "java.lang.String",
            "description": "A {@link org.jasypt.salt.SaltGenerator} implementation to be used by the\n encryptor.\n Default Value is {@code \"org.jasypt.salt.RandomSaltGenerator\"}.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getSaltGenerator()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": "org.jasypt.salt.RandomSaltGenerator"
        },
        {
            "name": "jasypt.encryptor.stringOutputType",
            "type": "java.lang.String",
            "description": "Specify the form in which String output will be encoded. {@code \"base64\"} or {@code \"hexadecimal\"}.\n Default Value is {@code \"base64\"}.\n\n @see org.jasypt.encryption.pbe.PBEStringEncryptor\n @see org.jasypt.encryption.pbe.config.StringPBEConfig#getStringOutputType()",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": "base64"
        },
        {
            "name": "jasypt.encryptor.bean",
            "type": "java.lang.String",
            "description": "Specify the name of bean to override jasypt-spring-boot's default properties based {@link org.jasypt.encryption.StringEncryptor}.\n Default Value is {@code \"jasyptStringEncryptor\"}.",
            "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties",
            "defaultValue": "jasyptStringEncryptor"
        },
        {
          "name": "jasypt.encryptor.property.detector-bean",
          "type": "java.lang.String",
          "description": "Specify the name of the bean to be provided for a custom {@link com.ulisesbocchio.jasyptspringboot.EncryptablePropertyDetector}.\n Default value is {@code \"encryptablePropertyDetector\"}",
          "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties$PropertyConfigurationProperties",
          "defaultValue": "encryptablePropertyDetector"
        },
        {
          "name": "jasypt.encryptor.property.resolver-bean",
          "type": "java.lang.String",
          "description": "Specify the name of the bean to be provided for a custom {@link com.ulisesbocchio.jasyptspringboot.EncryptablePropertyResolver}.\n Default value is {@code \"encryptablePropertyResolver\"}",
          "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties$PropertyConfigurationProperties",
          "defaultValue": "encryptablePropertyResolver"
        },
        {
          "name": "jasypt.encryptor.property.prefix",
          "type": "java.lang.String",
          "description": "Specify a custom {@link String} to identify as prefix of encrypted properties.\n Default value is {@code \"ENC(\"}",
          "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties$PropertyConfigurationProperties",
          "defaultValue": "ENC("
        },
      {
        "name": "jasypt.encryptor.property.suffix",
        "type": "java.lang.String",
          "description": "Specify a custom {@link String} to identify as suffix of encrypted properties.\n Default value is {@code \")\"}",
          "sourceType": "com.ulisesbocchio.jasyptspringboot.properties.JasyptEncryptorConfigurationProperties$PropertyConfigurationProperties",
          "defaultValue": ")"
        }
    ]
}